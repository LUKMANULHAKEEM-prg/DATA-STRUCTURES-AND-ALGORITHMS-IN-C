# Basic Sorting Algorithms in C

Welcome to the Basic Sorting Algorithms folder! This directory focuses on implementing and understanding various basic sorting algorithms using the C programming language. Whether you're new to sorting algorithms or looking to refresh your knowledge, you'll find implementations and explanations of insertion sort, selection sort, bubble sort, quicksort, and mergesort here.

## About

Sorting algorithms are fundamental in computer science and are used to rearrange elements of a list or array into a particular order. This folder aims to provide clear implementations and explanations of basic sorting algorithms, making them accessible to beginners.

## Algorithms Included

1. **Insertion Sort**: A simple sorting algorithm that builds the final sorted array one item at a time.
2. **Selection Sort**: An in-place comparison sorting algorithm that divides the input list into two parts: the sorted sublist and the unsorted sublist.
3. **Bubble Sort**: A simple sorting algorithm that repeatedly steps through the list, compares adjacent elements, and swaps them if they are in the wrong order.
4. **Quicksort**: A fast, divide-and-conquer sorting algorithm that divides an array into two subarrays, then recursively sorts the subarrays.
5. **Mergesort**: A divide-and-conquer algorithm that divides the input array into two halves, sorts each half, and then merges the sorted halves.

## Usage

Each sorting algorithm is implemented in C and accompanied by a README file within its respective directory. These README files contain detailed explanations of the algorithm, its time complexity analysis, and usage examples.

## Getting Started

1. **Clone the Repository**: Clone this repository to your local machine using:

    ```
    git clone https://github.com/LUKMANULHAKEEM-prg/sorting-algorithms-c.git
    ```

2. **Explore**: Dive into the directories to explore different sorting algorithms. Each directory contains its own README file with explanations and usage examples.
